<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>

<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Introduction to Linked Lists</title>
<link rel=STYLESHEET href="/~rhowell/style.css">

</head>

<body>
<div class="NAVBAR">
<a
      href="/~rhowell/DataStructures/redirect/linked-list-stacks-queues">Next:
      Implementing Stacks and Queues with Linked Lists
      </a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a
      href="/~rhowell/DataStructures/redirect/linked-lists">Up: Linked
      Lists 
      </a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a
      href="/~rhowell/DataStructures/">Top</a>
</div>

<h1>Introduction to Linked Lists</h1>

To build a linked list, we first need to define a simple <b>class</b>,
    which we will call <b>LinkedListCell&lt;T&gt;</b>.  Instances of
    this class will be the individual building blocks that we will
    chain together to form linked lists.  <b>T</b> will be the type of
    the data item we will store in each cell - i.e., the type of the
    data items that we will store in the linked list.
<p>
A <b>LinkedListCell&lt;T&gt;</b> will have as its only members two
      <b>public</b> properties, which can each be implemented using
      the default implementation:
<ul>
<li> The <b>Data</b> property gets or sets the data item (of type
	<b>T</b>) stored in the cell. </li> 
<li> The <b>Next</b> property gets or sets the next
	<b>LinkedListCell&lt;T&gt;</b> in the linked list. </li>
</ul>
Because this is a <b>class</b>,
    it is a <a
    href="/~rhowell/DataStructures/redirect/reference-value">reference
    type</a>; hence, the <b>Next</b> property will store a reference to another
    <b>LinkedListCell&lt;T&gt;</b>. 
<p>
Although the <b>LinkedListCell&lt;T&gt;</b> class is simple, we can use
      its <b>Next</b> property to chain together long sequences of its
      instances:
</p>
<img src="linked-list-example.jpg" alt="A linked list">
<p>
In the above figure, <tt>p</tt> is a
      <b>LinkedListCell&lt;string&gt;</b> variable.  Each box in the
      figure represents an instance of
      <b>LinkedListCell&lt;string&gt;</b>.  The boxes are each divided
      into two regions to indicate the two <b>public</b> properties
      for each cell.  Because <b>string</b> is a reference type, we
      have shown each <b>Data</b> property as a reference to a
      <b>string</b>.  The rightmost arrow that is bent downward is
      used to represent <b>null</b>.  The entire sequence of
      <b>LinkedListCell&lt;string&gt;</b>s is called a <i>linked
      list</i>.  Given this linked list:
</p>
<ul>
<li> <tt>p.Data</tt> is "Now"; </li>
<li> <tt>p.Next.Data</tt> is "is"; </li>
<li> <tt>p.Next.Next.Data</tt> is "the"; </li>
<li> <tt>p.Next.Next.Next.Data</tt> is "time"; and </li>
<li> <tt>p.Next.Next.Next.Next</tt> is <b>null</b> (if we try to get
	its <b>Data</b> property, we will get a
	<b>NullReferenceException</b>). </li>
</ul>
Suppose we want to insert the <b>string</b> "Notice:" at the beginning
    of this linked list.  Because we have not defined a constructor
    for the <b>LinkedListCell&lt;T&gt;</b> class, it has a default
    constructor that we can use to construct a new instance:
<pre>
LinkedListCell&lt;string&gt; cell = new LinkedListCell&lt;string&gt;();
</pre>
We can then set its <b>Data</b> property to "Notice:":
<pre>
cell.Data = "Notice:";
</pre>
This gives us the following:
<p>
<img src="linked-list-insert-1.jpg" 
    alt="Inserting to the beginning of a linked list">
</p>
We have the cell we need, but it's not linked into the linked list.
    We can accomplish this by changing the cell's <b>Next</b> property:
<pre>
cell.Next = p;
</pre>
This yields the following:
<p>
<img src="linked-list-insert-2.jpg"
   alt="Linking in the cell">
</p>
This is what we want, unless we want <tt>p</tt> to refer to the
    beginning of the linked list. We can take care of this by copying
    the value of <tt>cell</tt> to <tt>p</tt>:
<pre>
p = cell;
</pre>
This yields the following (we are not showing <tt>cell</tt> because we
    are no longer interested in it, but it
    still refers to the same cell):
<p>
<img src="linked-list-insert-3.jpg" alt="Completing the insertion">
</p>
We can also undo the above statement by copying into <tt>p</tt> the
    reference in the 
    <b>Next</b> property of the cell to which <tt>p</tt> refers:
<pre>
p = p.Next;
</pre>
This yields the following:
<p>
<img src="linked-list-remove-first.jpg" alt="Removing the first cell">
</p>
This has the effect of removing "Notice:" from the linked list to
    which <tt>p</tt> refers.  Though we haven't shown it,
    <tt>cell</tt> still refers to the cell containing "Notice:";
    hence, we still have access to the linked list beginning with this
    cell.  However, if the program had no references remaining to this
    cell, we would have no way to retrieve it, and it would be
    available for garbage collection.  This illustrates how we must
    take care not to lose a part of a linked list (unless we are
    finished with it) when we are manipulating it.

<p></p>

With a little more work, cells can be inserted into or removed from
    arbitrary locations in a linked list.  We will discuss how to do
    this in subsequent sections.  For now let us simply observe that
    linked lists do not always continue until they reach a <b>null</b>
    - they can contain cycles, as follows:
<p>
<img src="linked-list-cycle.jpg" alt="A linked list with a cycle">
</p>
This is occasionally what we want, but more often, this is a
    programming error that leads to an infinite loop.

<p></p>
<div class="NAVBAR">
<a
      href="/~rhowell/DataStructures/redirect/linked-list-stacks-queues">Next:
      Implementing Stacks and Queues with Linked Lists
      </a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a
      href="/~rhowell/DataStructures/redirect/linked-lists">Up: Linked
      Lists 
      </a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a
      href="/~rhowell/DataStructures/">Top</a>
</div>

<p>
<small>
<!-- hhmts start -->
Last modified: Fri Feb  2 11:39:03 CST 2018
<!-- hhmts end -->
</small>
</p>
<small>
    <i> &copy; Copyright 2014, 2018, <a
    href="/~rhowell/">Rod Howell</a>. All
    rights reserved.</i> 
</small>

<p></p>

<table border=0 cellpadding=2 summary="This table is used for layout
purposes only.">
<tr>
<td align=center>
    <a href="http://validator.w3.org/check/referer"><img border="0"
        src="/~rhowell/valid-html401.gif"
        alt="Valid HTML 4.01!" height="31" width="88"></a>
</td>
<tr>
<td>
<a href="http://jigsaw.w3.org/css-validator/check/referer">
             <img border="0"
                  src="/~howell/vcss.gif" 
                  alt="Valid CSS!" height="31" width="88">
            </a>
</td>
</table>

</body>

</html>
