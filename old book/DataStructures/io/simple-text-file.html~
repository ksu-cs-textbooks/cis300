<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>

<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Simple Text File I/O</title>
<link rel=STYLESHEET href="/~rhowell/style.css">

</head>

<body>
<div class="NAVBAR">
<a href="/~rhowell/DataStructures/redirect/exceptions">Next: Exception
      Handling 
      </a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a
      href="/~rhowell/DataStructures/redirect/dialogs">Previous:
      Dialogs 
      </a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a
      href="/~rhowell/DataStructures/redirect/io">Up: Input/Output
      </a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a
      href="/~rhowell/DataStructures/">Top</a>
</div>

<h1>Simple Text File I/O</h1>

Many of the I/O tools provided by the .NET Framework are found in the
      <a
      href="http://msdn.microsoft.com/en-us/library/system.io.aspx">System.IO</a>
      namespace.  Note, however, that Visual Studio® does not
      automatically provide a <b>using</b> directive for this
      namespace; hence, if you want to avoid the need to add the
      prefix "System.IO." to each type that you use from this
      namespace, you should add a <b>using</b> directive for it.  One
      class that provides several general-purpose <a
      href="/~rhowell/DataStructures/redirect/static-this"><b>static</b></a>
      methods related to file I/O is the <a
      href="http://msdn.microsoft.com/en-us/library/system.io.file(v=vs.110).aspx"><b>File</b></a>
      class.  Two of the <b>static</b> methods provided by this class
      are:
<ul>
<li> <a
      href="http://msdn.microsoft.com/en-us/library/ms143368(v=vs.110).aspx"><b>File.ReadAllText</b></a>
      and </li> <li> <a
      href="http://msdn.microsoft.com/en-us/library/ms143375(v=vs.110).aspx"><b>File.WriteAllText</b></a>
</ul>
The <b>File.ReadAllText</b> method takes a <b>string</b> as its only
    parameter.  This <b>string</b> should give the path to a text
    file.  It will then attempt to read that entire file and return
    its contents as a <b>string</b>.  For example, if <tt>fileName</tt>
    refers to a <b>string</b> containing the path to a text file, then 
<pre>
string contents = File.ReadAllText(fileName);
</pre>
will read that entire file and place its contents into the
    <b>string</b> to which <tt>contents</tt> refers.  We can then
    process the <b>string</b> <tt>contents</tt> however we need to.
<p>
The <b>File.WriteAllText</b> method takes two parameters:
</p>
<ul>
<li> a <b>string</b> giving the path to a file; and </li>
<li> a <b>string</b> giving the text to be written. </li>
</ul>
It will then attempt to write the given text as the entire contents of
    the given file.  Thus, if <tt>fileName</tt> refers to a
    <b>string</b> containing the path to a file and <tt>contents</tt>
    refers to some <b>string</b>, then
<pre>
File.WriteAllText(fileName, contents);
</pre>
will write to that file the <b>string</b> to which <tt>contents</tt>
    refers.
<p>
When calling either of these methods, there are a number things that
      can go wrong.  For example, the file might be accessed through a
      network, and access to the network might be lost before the
      method can complete.  When such an issue prevents the successful
      completion of one of these methods, an
      <i>exception</i> is thrown.  In <a
      href="/~rhowell/DataStructures/redirect/exceptions">the next
      section</a>, we will discuss how to handle such exception.
</p>
While these methods are quite easy to use, they are not always
    the best ways of doing text file I/O.  One drawback is that files
    can be quite large - perhaps too large to fit in memory or within
    a single <b>string</b>.  Even when it is possible to read the
    entire file into a single <b>string</b>, it may use enough memory
    that performance suffers.  In the section, "<a
    href="/~rhowell/DataStructures/redirect/advanced-text-file-io">Advanced
    Text File I/O</a>",
    we will present other techniques for reading and writing text
    files.

<p></p>
<div class="NAVBAR">
<a href="/~rhowell/DataStructures/redirect/exceptions">Next: Exception
      Handling 
      </a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a
      href="/~rhowell/DataStructures/redirect/dialogs">Previous:
      Dialogs 
      </a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a
      href="/~rhowell/DataStructures/redirect/io">Up: Input/Output
      </a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a
      href="/~rhowell/DataStructures/">Top</a>
</div>

<p>
<small>
Visual Studio is either a registered trademark or a trademark of
	Microsoft Corporation in the United States and/or other
	countries.
</small>
</p>
<p>
<small>
<!-- hhmts start -->
Last modified: Sat Jan 18 10:31:30 CST 2014
<!-- hhmts end -->
</small>
</p>
<small>
    <i> &copy; Copyright 2014, <a
    href="/~rhowell/">Rod Howell</a>. All
    rights reserved.</i> 
</small>

<p></p>

<table border=0 cellpadding=2 summary="This table is used for layout
purposes only.">
<tr>
<td align=center>
    <a href="http://validator.w3.org/check/referer"><img border="0"
        src="/~rhowell/valid-html401.gif"
        alt="Valid HTML 4.01!" height="31" width="88"></a>
</td>
<tr>
<td>
<a href="http://jigsaw.w3.org/css-validator/check/referer">
             <img border="0"
                  src="/~howell/vcss.gif" 
                  alt="Valid CSS!" height="31" width="88">
            </a>
</td>
</table>

</body>

</html>
