<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Indexers :: Data Structures in C#</title><link>https://textbooks.cs.ksu.edu/cis300/appendix/syntax/indexers/</link><description>Indexers Recall that the System.Collections.Generic.Dictionary&lt;TKey, TValue> class (see “The Dictionary&lt;TKey, TValue> Class”) allows keys to be used as indices for the purpose of adding new keys and values, changing the value associated with a key, and retrieving the value associated with a key in the table. In this section, we will discuss how to implement this functionality.
An indexer in C# is defined using the following syntax:
public TValue this[TKey k] { get { // Code to retrieve the value with key k } set { // Code to associate the given value with key k } }Note the resemblance of the above code to the definition of a property.</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://textbooks.cs.ksu.edu/cis300/appendix/syntax/indexers/index.xml" rel="self" type="application/rss+xml"/></channel></rss>