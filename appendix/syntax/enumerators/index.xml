<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Enumerators :: Data Structures in C#</title><link>https://textbooks.cs.ksu.edu/cis300/appendix/syntax/enumerators/</link><description>Enumerators As we saw in the previous section, in order for a data structure to support a foreach loop, it must be a subtype of either IEnumerable or IEnumerable&lt;T>, where T is the type of the elements in the data structure. Thus, because Dictionary&lt;TKey, TValue> is a subtype of IEnumerable&lt;KeyValuePair&lt;TKey, TValue>>, we can use a foreach loop to iterate through the key-value pairs that it stores. Likewise, because its Keys and Values properties get objects that are subtypes of IEnumerable&lt;TKey> and IEnumerable&lt;TValue>, respectively, foreach loops may be used to iterate through these objects as well, in order to process all the keys or all the values stored in the dictionary.</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://textbooks.cs.ksu.edu/cis300/appendix/syntax/enumerators/index.xml" rel="self" type="application/rss+xml"/></channel></rss>