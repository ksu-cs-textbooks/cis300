<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Multiple Implementations of Children :: Data Structures in C#</title><link>https://textbooks.cs.ksu.edu/cis300/trees/tries/multiple-impl/</link><description>Multiple Implementations of Children The trie implementation given in the previous section offers very efficient lookups - a word of length $ m $ can be looked up in $ O(m) $ time, no matter how many words are in the trie. However, it wastes a large amount of space. In a typical trie, a majority of the nodes will have no more than one child; however, each node contains a 26-element array to store its children.</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://textbooks.cs.ksu.edu/cis300/trees/tries/multiple-impl/index.xml" rel="self" type="application/rss+xml"/></channel></rss>